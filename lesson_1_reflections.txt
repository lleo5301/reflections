How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it provided all the lines that where modified and the lines that were added or
    removed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows programmers to go back on their code and restore code that might
    have worked once and now after the modification it is no longer working.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros are that you can choose when you commit and how big you want your
    difference to be. The cons is that you have to make the judgement call for
    the commits and this can lead to complications.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because git takes into consideration a package or repository. You may have
    programs that when modified it affects multiple files as oposed to a text
    file in docs that you can only modify that single file at a time.

How can you use the commands git log and git diff to view the history of files?

    git log provides all the commits for a repository
    git diff can compare two commits and give you a break down of what was
    added deleted or modified.

How might using version control make you more confident to make changes that
could break something?

    By allowing you to go back to previous versions of the files that were modified
    Giving assurance that the code wont completely break.

Now that you have your workspace set up, what do you want to try using Git for?

    All software developement
